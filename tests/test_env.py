import os
import pytest
import importlib
from app.core.config import get_settings, is_dev_mode, is_qa_mode, is_prod_mode

def test_environment_detection():
    """Test environment detection functions without relying on cached settings."""
    # Store original environment
    original_env = os.environ.get("ENVIRONMENT", "dev")
    
    try:
        # We need to reload the config module to clear the lru_cache
        import app.core.config
        
        # Test each environment one by one
        for env, expected in [
            ("dev", (True, False, False)),
            ("qa", (False, True, False)), 
            ("prod", (False, False, True))
        ]:
            # Set environment
            os.environ["ENVIRONMENT"] = env
            
            # Reload the module to clear the cache
            importlib.reload(app.core.config)
            
            # Import functions again after reload
            from app.core.config import is_dev_mode, is_qa_mode, is_prod_mode
            
            # Test the functions
            assert is_dev_mode() == expected[0], f"is_dev_mode() incorrect for {env}"
            assert is_qa_mode() == expected[1], f"is_qa_mode() incorrect for {env}"
            assert is_prod_mode() == expected[2], f"is_prod_mode() incorrect for {env}"
    
    finally:
        # Restore original environment
        os.environ["ENVIRONMENT"] = original_env
        # Reload config one last time
        importlib.reload(app.core.config)

def test_settings_loading():
    """Test settings are properly loaded."""
    settings = get_settings()
    
    # Verify API settings
    assert settings.API_USERNAME is not None
    assert settings.API_PASSWORD is not None
    assert settings.RATE_LIMIT_REQUESTS > 0
    
    # Verify supported models
    assert "gpt-3.5-turbo" in settings.SUPPORTED_MODELS
    assert settings.DEFAULT_MODEL is not None

# Generated by Copilot
