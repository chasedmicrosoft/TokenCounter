import os
from pydantic import BaseSettings
from functools import lru_cache
from typing import Dict, List

class Settings(BaseSettings):
    """Application settings."""
    
    # Environment
    ENVIRONMENT: str = "dev"  # dev, qa, prod
    
    # API settings
    API_USERNAME: str = "admin"
    API_PASSWORD: str = "password"
    RATE_LIMIT_REQUESTS: int = 100
    RATE_LIMIT_PERIOD: int = 60  # seconds
    
    # Supported models and their configurations
    SUPPORTED_MODELS: List[str] = ["gpt-3.5-turbo", "gpt-4", "text-davinci-003"]
    DEFAULT_MODEL: str = "gpt-3.5-turbo"
    
    class Config:
        env_file = ".env"
        case_sensitive = True

@lru_cache()
def get_settings() -> Settings:
    """Get cached settings."""
    return Settings()

def is_dev_mode() -> bool:
    """Check if running in development mode."""
    return get_settings().ENVIRONMENT.lower() == "dev"

def is_prod_mode() -> bool:
    """Check if running in production mode."""
    return get_settings().ENVIRONMENT.lower() == "prod"

def is_qa_mode() -> bool:
    """Check if running in QA mode."""
    return get_settings().ENVIRONMENT.lower() == "qa"

# Generated by Copilot
